(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{372:function(t,s,e){t.exports=e.p+"assets/img/enable_privileged_intents.471657cf.png"},412:function(t,s,e){"use strict";e.r(s);var a=e(42),n=Object(a.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"gateway-intents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gateway-intents"}},[t._v("#")]),t._v(" Gateway Intents")]),t._v(" "),a("p",[t._v('Discord allows you to "subscribe" to specific groups of events.\nThese "subscriptions" are called intent.\nDisabling intents that are not required for your bot can significantly increase your bot\'s performance.')]),t._v(" "),a("h2",{attrs:{id:"list-of-intents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list-of-intents"}},[t._v("#")]),t._v(" üìã List of Intents")]),t._v(" "),a("p",[t._v("Below you can find a table with all intents supported by Discord.")]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[t._v("Intent")]),t._v(" "),a("th",[t._v("Safe to Disable")]),t._v(" "),a("th",[t._v("Privileged")])])]),t._v(" "),a("tbody",[a("tr",[a("td",[a("code",[t._v("GUILDS")])]),t._v(" "),a("td",[t._v("‚ùå")]),t._v(" "),a("td",[t._v("‚ùå")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("GUILD_MEMBERS")])]),t._v(" "),a("td",[t._v("‚úîÔ∏è")]),t._v(" "),a("td",[t._v("‚úîÔ∏è")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("GUILD_BANS")])]),t._v(" "),a("td",[t._v("‚ö†Ô∏è*")]),t._v(" "),a("td",[t._v("‚ùå")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("GUILD_EMOJIS")])]),t._v(" "),a("td",[t._v("‚ö†Ô∏è*")]),t._v(" "),a("td",[t._v("‚ùå")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("GUILD_INTEGRATIONS")])]),t._v(" "),a("td",[t._v("‚úîÔ∏è")]),t._v(" "),a("td",[t._v("‚ùå")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("GUILD_WEBHOOKS")])]),t._v(" "),a("td",[t._v("‚úîÔ∏è")]),t._v(" "),a("td",[t._v("‚ùå")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("GUILD_INVITES")])]),t._v(" "),a("td",[t._v("‚úîÔ∏è")]),t._v(" "),a("td",[t._v("‚ùå")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("GUILD_VOICE_STATES")])]),t._v(" "),a("td",[t._v("‚ö†Ô∏è*")]),t._v(" "),a("td",[t._v("‚ùå")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("GUILD_PRESENCES")])]),t._v(" "),a("td",[t._v("‚úîÔ∏è")]),t._v(" "),a("td",[t._v("‚úîÔ∏è")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("GUILD_MESSAGES")])]),t._v(" "),a("td",[t._v("‚úîÔ∏è")]),t._v(" "),a("td",[t._v("‚ùå")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("GUILD_MESSAGE_REACTIONS")])]),t._v(" "),a("td",[t._v("‚úîÔ∏è")]),t._v(" "),a("td",[t._v("‚ùå")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("GUILD_MESSAGE_TYPING")])]),t._v(" "),a("td",[t._v("‚úîÔ∏è")]),t._v(" "),a("td",[t._v("‚ùå")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("DIRECT_MESSAGES")])]),t._v(" "),a("td",[t._v("‚úîÔ∏è")]),t._v(" "),a("td",[t._v("‚ùå")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("DIRECT_MESSAGE_REACTIONS")])]),t._v(" "),a("td",[t._v("‚úîÔ∏è")]),t._v(" "),a("td",[t._v("‚ùå")])]),t._v(" "),a("tr",[a("td",[a("code",[t._v("DIRECT_MESSAGE_TYPING")])]),t._v(" "),a("td",[t._v("‚úîÔ∏è")]),t._v(" "),a("td",[t._v("‚ùå")])])])]),t._v(" "),a("p",[t._v("* Will most likely work, but needs further testing")]),t._v(" "),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("Good to know!")]),t._v(" "),a("p",[a("em",[t._v("Guild")]),t._v(" is a synonym for servers, commonly used in Discord's API.\nSee "),a("RouterLink",{attrs:{to:"/wiki/basic-tutorials/glossary/"}},[t._v("Glossary")]),t._v(".")],1)]),t._v(" "),a("h2",{attrs:{id:"what-happens-when-i-disable-some-intents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#what-happens-when-i-disable-some-intents"}},[t._v("#")]),t._v(" üí° What Happens When I Disable Some Intents?")]),t._v(" "),a("p",[t._v("When you disable some of the listed intents, Javacord will not fire events that belong to the intents and\nwill not update these specific parts of the cache.")]),t._v(" "),a("p",[t._v("At the moment, we don't have a list which events are affected by which intents (but it will come soon‚Ñ¢Ô∏è).\nHowever, most intents should be self-explanatory.\nE.g. when you disable the "),a("code",[t._v("DIRECT_MESSAGES")]),t._v(" intent, your bot will not receive any private messages.")]),t._v(" "),a("h2",{attrs:{id:"privileged-intents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#privileged-intents"}},[t._v("#")]),t._v(" üëë Privileged Intents")]),t._v(" "),a("p",[t._v('Some intents are defined as "privileged" due to the sensitive nature of the data.\nTo use these intents, you have to go to your bot in the '),a("a",{attrs:{href:"https://discord.com/developers/applications",target:"_blank",rel:"noopener noreferrer"}},[t._v("Developer Portal"),a("OutboundLink")],1),t._v("\n(where you created bot) and manually enable the intents:")]),t._v(" "),a("p",[a("img",{attrs:{src:e(372),alt:""}})]),t._v(" "),a("p",[t._v("There are some additionally restrictions for bots that are in over 100 servers:")]),t._v(" "),a("ul",[a("li",[t._v("Your bot must be verified")]),t._v(" "),a("li",[t._v("Your bot must be whitelisted to use this intents")])]),t._v(" "),a("p",[t._v("Take a look at the official article from Discord about this topic and how to verify your bot:\n"),a("a",{attrs:{href:"https://support.discord.com/hc/en-us/articles/360040720412",target:"_blank",rel:"noopener noreferrer"}},[t._v("Bot Verification and Data Whitelisting"),a("OutboundLink")],1),t._v(".")]),t._v(" "),a("h2",{attrs:{id:"notable-intents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#notable-intents"}},[t._v("#")]),t._v(" ‚ùóÔ∏è Notable Intents")]),t._v(" "),a("p",[t._v("The following two intents are especially noteworthy: "),a("code",[t._v("GUILD_MEMBERS")]),t._v(" and "),a("code",[t._v("GUILD_PRESENCES")]),t._v(".\nBesides being privileged, they have some special implications for Javacord:")]),t._v(" "),a("h3",{attrs:{id:"guild-presences"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#guild-presences"}},[t._v("#")]),t._v(" "),a("code",[t._v("GUILD_PRESENCES")])]),t._v(" "),a("p",[t._v("This intent is required to get updates about a user's status (i.e., if they are online, what game they are playing, ...).\nAdditionally, without this intent it might take considerably longer to cache all users because of ratelimits\n(up to 10 minutes for shards with 1000 servers).\nIt is advised against setting "),a("code",[t._v("DiscordApiBuilder#setWaitForAllUsersOnStartup(true)")]),t._v(" without this intent, unless absolutely necessary.")]),t._v(" "),a("h3",{attrs:{id:"guild-members"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#guild-members"}},[t._v("#")]),t._v(" "),a("code",[t._v("GUILD_MEMBERS")])]),t._v(" "),a("p",[t._v("This intent is required to keep all users in Javacord's cache.\nWithout this intent, methods like "),a("code",[t._v("Server#getMembers()")]),t._v(" or "),a("code",[t._v("DiscordApi#getCachedUsers()")]),t._v(" will return empty collections.\nHowever, you will still be able to access users from objects like messages, e.g. "),a("code",[t._v("Message#getUserAuthor()")]),t._v(" will still work.")]),t._v(" "),a("h2",{attrs:{id:"setting-intents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#setting-intents"}},[t._v("#")]),t._v(" ‚öôÔ∏è Setting Intents")]),t._v(" "),a("p",[t._v("Javacord allows you to specify intents in the "),a("code",[t._v("DiscordApiBuilder")]),t._v(" prior to login.\nThere are many options to set intents.\nThe following example code shows the most common ones:")]),t._v(" "),a("h3",{attrs:{id:"set-all-non-privileged-intents-default"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-all-non-privileged-intents-default"}},[t._v("#")]),t._v(" Set All Non-Privileged Intents (Default)")]),t._v(" "),a("p",[t._v("This method enables all non-privileged intents.\nThis is the default setting in Javacord.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DiscordApi")]),t._v(" api "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DiscordApiBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"topc secret"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAllNonPrivilegedIntents")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("login")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"set-all-non-privileged-intents-except"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-all-non-privileged-intents-except"}},[t._v("#")]),t._v(" Set All Non-Privileged Intents Except")]),t._v(" "),a("p",[t._v("This method enabled all non-privileged intents, except the given ones.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DiscordApi")]),t._v(" api "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DiscordApiBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"topc secret"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAllNonPrivilegedIntentsExcept")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Intent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GUILD_WEBHOOKS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("login")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"set-all-intents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-all-intents"}},[t._v("#")]),t._v(" Set All Intents")]),t._v(" "),a("p",[t._v("This method enabled all intents.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DiscordApi")]),t._v(" api "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DiscordApiBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"topc secret"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAllIntents")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("login")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"set-all-intents-except"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-all-intents-except"}},[t._v("#")]),t._v(" Set All Intents Except")]),t._v(" "),a("p",[t._v("This method enabled all intents, except the given ones.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DiscordApi")]),t._v(" api "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DiscordApiBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"topc secret"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setAllIntentsExcept")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Intent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GUILD_PRESENCES"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Intent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GUILD_WEBHOOKS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("login")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])]),a("h3",{attrs:{id:"set-intents"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-intents"}},[t._v("#")]),t._v(" Set Intents")]),t._v(" "),a("p",[t._v("This method only enables the given intents.")]),t._v(" "),a("div",{staticClass:"language-java extra-class"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DiscordApi")]),t._v(" api "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DiscordApiBuilder")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setToken")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"topc secret"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setIntents")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Intent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("GUILDS"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Intent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("DIRECT_MESSAGES"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("login")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("join")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=n.exports}}]);